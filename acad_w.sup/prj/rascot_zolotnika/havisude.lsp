;;;Функция Хевисайда
(defun haviside	(h_min h_max x func)
  (cond
    ((<= x h_min) 0.0)
    ((>= x h_max) (- (func h_max) (func h_min)))
    (t
     (- (func x) (func h_min))
    )
  )
)



;;;Возвращает расход [кг/ч] через форсунку.
(defun g[f_dp_ro] (f			; - эквивалентная площадь форсунки [мм^2];
		   dp			; - перепад давления на форсунке [кгс/см^2];
		   ro			; - плотность топлива кг/м^3;
		  )
  (setq	dp (* dp 9.81 10000.)
	f  (/ f 1000000.)
  )
  (* 3600. (sqrt (* 2.0 f f ro dp)))
)

;;; Возвращает эквивалентную площадь форсунки, мм^2.
(defun f[g_dp_ro] (g			; - расход в контрольной точке, кг/ч;
		   dp			; - перепад давления в контрольной точке кгс/см^2;
		   ro			; - плотность топлива в контрольной точке кг/м^3;
		  )
  (setq	g  (/ g 3600.0)
	dp (* dp 9.81 10000.0)
  )

  (* 1000000. (/ g (sqrt (* 2.0 ro dp))))
)

;;; Возвращает перепад давления, срабатываемый на форсунке, кгс/см^2.
(defun dp[g_f_ro] (g			; - расход, кг/ч;
		   f			; - эквивалентная площадь, мм^2;
		   ro			; - плотность топлива в контрольной точке кг/м^3;
		  )
  (setq
    g (/ g 3600.0)
    f (/ f 1000000.)
  )
  (/ (* g g) (* f f 2.0 ro) (* 9.81 10000.0))
)
;;;**********************************************************************************************************************************************

;;;Возвращает площадь окон золотника (мм^2) первого канала в зависимости от открытия окон (мм).
(defun area_zikl_1_kan_ot_h (h		; - высота открытия окна в мм.
			    )
  (* 2.0
     (+	(haviside 0.0
		  1.3
		  h
		  (lambda (el) (* 4.0 el el (/ 1.0 1.3)))
	)
	(haviside 1.3
		  3.9
		  h
		  (lambda (el) (* 8.0 (- el 1.3)))
	)
     )
  )
)
;;;Возвращает площадь окон золотника (мм^2) впервого канала в зависимости от открытия окон (мм).
(defun area_zikl_2_kan_ot_h (h		; - высота открытия окна в мм.
			    )
  (* 2.0
     (+	(haviside 0.0
		  13.0
		  h
		  (lambda (el) (* 1.0 el))
	)
	(haviside 13.0
		  19.0
		  h
		  (lambda (el) (+ (* 0.15 el el) (* -2.9 el)))
	)
     )
  )
)

;;:Возвращает перемещение золотника.
(defun h[p_s_c]	(p			; - давление перед РК кг/см^2;
		 p0			; - давление начала открытия золотника кг/см^2;
		 d_zol			; - диаметр золотника см;
		 c			; - жесткость пружины кгс/мм;
		 /			;
		 dp			; - перепад давления топлива кг/см^2;
		 s_zol			; - площадь золотника см^2;
		 f			; - сила состороны топлива кгс;
)
  (setq	dp    (- p p0)
	s_zol (f_otv d_zol)
	f     (* dp s_zol)
  )
  (/ f c)				;
)

(defun area_zikl_1_kan_ot_p (p		;
			     /		;
			     h		;

			    )
  (setq	h (h[p_s_c] p 7.0 1.0 (/ 22. 9.81))
  )
  (area_zikl_1_kan_ot_h h)
)

(defun area_zikl_2_kan_ot_p (p		;
			     /		;
			     h		;
			    )
  (setq h (h[p_s_c] p 15.0 1.6 (/ (- 765.0 199.7) (- 74.7 59.7) 9.81)))
  (area_zikl_2_kan_ot_h h)

)

;;;Возвращает эквивалентную площадь первого канала форсунок, мм^2.
(defun f_fors_1k ()
  (* 16. (f[g_dp_ro] 75.0 30.0 835.0))
)
;;;Возвращает эквивалентную площадь второго канала форсунок, мм^2.
(defun f_fors_2k ()
  (* 16. (f[g_dp_ro] (- 500.0 75.0) 30.0 835.0))
)

(defun f_1k (p)
  (f_ek_zikl (list (f_fors_1k) (area_zikl_1_kan_ot_p p)))
)

(defun f_2k (p)
  (f_ek_zikl (list (f_fors_2k) (area_zikl_2_kan_ot_p p)))
)

;;;Возвращает расход топлива через первый канал двигателя  кг/ч.
(defun g_1k (p_rk			; - давление топлива перед РК кгс/см^2;	     
	     p_02			; - давление воздуха в КС кгс/см^2;
	     /				;
	     f1_ekv			; - эквивалентная площадь проходного сечения канала мм^2;
	    )
  (setq
    f1_ekv (f_1k p_rk)
  )
  (g[f_dp_ro] f1_ekv (- p_rk p_02) 835.0)
)


;;;Возвращает расход топлива через второй канал двигателя  кг/ч.
(defun g_2k (p_rk			; - давление топлива перед РК кгс/см^2;
	     p_02			; - давление воздуха в КС кгс/см^2;
	     /				;
	     f2_ekv			; - эквивалентная площадь проходного сечения канала мм^2;
	    )
  (setq f2_ekv (f_2k p_rk))
  (g[f_dp_ro] f2_ekv (- p_rk p_02) 835.0)
)

(defun g_[1+2]k	(p_rk p_02)
  (+ (g_1k p_rk p_02) (g_2k p_rk p_02))
)

;;; Возвращает давление топлива перед РК кгс/см^2.
(defun p_befor_rk (p_02 G_summ)
  (пловинное_деление
    (lambda (p_rk p_02 G_summ)
      (- (g_[1+2]k p_rk p_02) G_summ)
    )
    p_02
    100.0
    0.00001
    (list t p_02 G_summ)
    1
  )
)

(defun распределение_топлива_и_давления
       (p_02 G_summ / p_rk g_fuel_1 g_fuel_2 dp_fors_1 dp_fors_2)
  (setq	p_rk	 (p_befor_rk p_02 G_summ)
	g_fuel_1 (g_1k p_rk p_02)
	g_fuel_2 (g_2k p_rk p_02)
	dp_fors_1 (dp[g_f_ro] g_fuel_1 (f_fors_1k) 835.0) 
	dp_fors_2 (dp[g_f_ro] g_fuel_2 (f_fors_2k) 835.0)
  )
  (princ "\n")
  (mapcar
    (function
      (lambda (str)
	(princ str)
	(princ "=")
	(princ (eval (read str)))
	(princ "; ")
      )
    )
    (list "p_rk" "dp_fors_1" "dp_fors_2" "p_02" "G_summ" "g_fuel_1" "g_fuel_2")
  )
  (list p_rk dp_fors_1 dp_fors_2 p_02 G_summ g_fuel_1 g_fuel_2)
)

(mapcar	(function распределение_топлива_и_давления)
	(list 2.2 4.0 5.7 8.32 10.78 13.44 15.81 16.92 18.27 19.83)
	(list 550.0	800.0	  1200.0    1960.8    2716.4
	      3538.0	4418.9	  4865.0    5341.2    6015.4
	     )
)