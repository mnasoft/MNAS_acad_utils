;|
	culc_poly_func (var fun x fun_name)-	создает  функцию - полином с именем	
						fun_name с числом аргументов		
						содержащихся в списке var минус 1.	
	var	-	список переменных и переменная обозначающая значение функции;	
	fun	-	список элементы которого сумируются в функции полиноме,		
			состоящий из списков перемножаются, содержащих имена переменных,	
			которые перемножаются в полиноме, вид осредняющей зависимости.	
	x	-	матрица коэффициентов;						
	fun_name-	передается цитируемое значение представляющее из себя		
			имя функции.							
|;

;|	Например: Образуем функцию одного переменного ssaa.
(CULC_POLY_FUNC
	'(XX YY)
	'((XX XX) (XX) (1.0) (YY))
	'("Matr" 1 3 ((0 . 1.0) (1 . 2.0) (2 . 3.0)))
	'ssaa
)
ssaa
((XX) (+ (* 1.0 XX XX) (* 2.0 XX) (* 3.0 1.0)))
|;

(defun culc_poly_func (var fun x fun_name / li)
  (setq
    var	(reverse (cdr (reverse var)))
    fun	(reverse (cdr (reverse fun)))
    x	(matr:get_row x 0)
    li	(mapcar 'cons x fun)
    li	(mapcar
	  (function
	    (lambda (el)
	      (cons '* el)
	    )
	  )
	  li
	)
    li	(cons '+ li)
  )
  (defun-q-list-set fun_name (list var li))
)
;|
osr_func (var fun pnt func_name) - вычисляет функцию-полином осредняющий по МНК (методу наименьших квадратов)
var - список переменных;
fun - вид осредняющей зависимости;
pnt - список точек по которым проводится зависимость;
fun_name - передается цитируемое значение представляющее из себя имя функции.

Пример 1: вычислим функцию одного переменного вида y=a*x*x+b*x+c
наилучшим образом согласующуюся с точками
'((0.0 0.0) (1.0 1.0) (2.0 8.0) (3.0 27.0) (-1.0 -1.0)).

(osr_func
  '(XX YY)
  '((XX XX) (XX) (1.0) (YY))
  '((0.0 0.0) (1.0 1.0) (2.0 8.0) (3.0 27.0) (-1.0 -1.0))
  'ssaa
)

SSAA
((XX) (+ (* 1.0 XX XX) (* 2.0 XX) (* 3.0 1.0)))

Пример 2: вычислим функцию двух переменных вида y=a*x1+b*x2+c*x1*x2+d
наилучшим образом согласующуюся с точками

(osr_func
  '(X1 X2 YY)
  '((X1) (X2) (X1 X2) (1.0) (YY))
  '((0.0  0.0 0.0) (1.0 0.0 2.0) (2.0 0.0 4.0) (0.0 1.0 1.0) (1.0 1.0 6.0  ) (2.0 2.0 18.0 ))
  'ssaa
)
|;

(defun osr_func	(var fun pnt fn_nm / x)
  (setq x (matr:sys_lu (matr:mnk var fun pnt)))
  (culc_poly_func var fun x fn_nm)
)
;|«Visual LISP© Format Options»
(95 2 5 2 nil "end of" 85 9 0 0 0 T T nil T)
;*** DO NOT add text below the comment! ***|;
